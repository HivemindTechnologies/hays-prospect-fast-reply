version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test:
        - "CMD-SHELL"
        - "cub zk-ready localhost 2181"
      interval: 10s
      timeout: 10s
      retries: 30

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=broker -Dcom.sun.management.jmxremote.rmi.port=9997
    healthcheck:
      test:
        - "CMD-SHELL"
        - "cub kafka-ready -b broker:29092 1 10"
      interval: 10s
      timeout: 10s
      retries: 30
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data

  sql-server:
    build: sql-server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "SecretWord1!"
      ACCEPT_EULA: "Y"

  akhq:
    image: tchiotludo/akhq:latest
    depends_on:
      - kafka
    volumes:
      - ./akhq/akhq.yml:/app/application.yml
    ports:
      - "12345:8080"

volumes:
  kafka-data: